{% if ztp_acm and 'advanced-cluster-management' not in disconnected_operators %}
{{ disconnected_operators.append("advanced-cluster-management") or "" }}
{% endif %}

{% if ztp_acm and 'multicluster-engine' not in disconnected_operators %}
{{ disconnected_operators.append("multicluster-engine") or "" }}
{% endif %}

{% if not ztp_acm and 'multicluster-engine' not in disconnected_operators %}
{{ disconnected_operators.append("multicluster-engine") or "" }}
{% endif %}

{% if ztp_gitops and 'openshift-gitops-operator' not in disconnected_operators %}
{{ disconnected_operators.append("openshift-gitops-operator") or "" }}
{% endif %}

{% if ztp_gitops and 'topology-aware-lifecycle-manager' not in disconnected_operators %}
{{ disconnected_operators.append("topology-aware-lifecycle-manager") or "" }}
{% endif %}

{% set snoplus_bmcs = [] %}

{% for spoke in ztp_spokes %}
{% set spoke_name = spoke.name %}
{% set spoke_api_ip = spoke.get('api_ip') %}
{% set spoke_ingress_ip = spoke.get('ingress_ip') %}
{% if lab and spoke_api_ip != None and spoke_ingress_ip != None %}
api-{{ spoke_name }}:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ spoke_api_ip }}
 alias:
 - api.{{ spoke_name }}.{{ domain }}
 - api-int.{{ spoke_name }}.{{ domain }}

apps-{{ spoke_name }}:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ spoke_ingress_ip }}
 alias:
 - console-openshift-console.apps.{{ spoke_name }}.{{ domain }}
 - oauth-openshift.apps.{{ spoke_name }}.{{ domain }}
 - prometheus-k8s-openshift-monitoring.apps.{{ spoke_name }}.{{ domain }}
 - canary-openshift-ingress-canary.apps.{{ spoke_name }}.{{ domain }}
 - assisted-service-open-cluster-management.apps.{{ spoke_name }}.{{ domain }}
 - assisted-service-assisted-installer.apps.{{ spoke_name }}.{{ domain }}
 - assisted-image-service-open-cluster-management.apps.{{ spoke_name }}.{{ domain }}
{% endif %}
{% endfor %}

{% if not virtual_workers %}
{% set virtual_workers_number = 0 %}
{% endif %}

{% set total_number = namespace(value=0) %}
{% for spoke in ztp_spokes %}
{% set spoke_name = spoke.name %}
{% set spoke_api_ip = spoke.get('api_ip') %}
{% set spoke_ingress_ip= spoke.get('ingress_ip') %}
{% set spoke_ctlplanes_number = spoke.get('ctlplanes_number', 1) %}
{% set spoke_workers_number = spoke.get('workers_number', 0) %}
{% set spoke_snoplus = True if spoke_ctlplanes_number == 1 and spoke_workers_number == 1 else False %}
{% set virtual_nodes_number = spoke.get('virtual_nodes_number', 0) %}
{% set ztp_uefi = spoke.get('uefi', ztp_uefi) %}
{% set ztp_virtual_nodes_numcpus = spoke.get('virtual_nodes_numcpus', ztp_virtual_nodes_numcpus) %}
{% set ztp_virtual_nodes_memory = spoke.get('virtual_nodes_memory', ztp_virtual_nodes_memory) %}
{% set ztp_virtual_nodes_disk_size = spoke.get('virtual_nodes_disk_size', ztp_virtual_nodes_disk_size) %}
{% set ztp_virtual_nodes_disk_interface = spoke.get('virtual_nodes_disk_interface', ztp_virtual_nodes_disk_interface) %}

{% if spoke_snoplus %}
{% do snoplus_bmcs.append(spoke_name) %}
{% endif %}

{% if virtual_nodes_number > 0 %}
{% for num in range(0, virtual_nodes_number) %}

{{ cluster }}-{{ spoke_name }}-node-{{ num }}:
 pool: {{ pool }}
 redfish_iso: {{ spoke_name }}.iso
 image:
 numcpus: {{ ztp_virtual_nodes_numcpus }}
 start: false
 cloudinit: false
 uefi_legacy: {{ 'false' if uefi|default(False) else ztp_uefi }}
 user: core
 memory: {{ ztp_virtual_nodes_memory }}
 nets:
 - name: {{ baremetal_net }}
{% if baremetal_macs and baremetal_macs|length > virtual_ctlplanes_number + virtual_workers_number + total_number.value + num %}
   mac: {{ baremetal_macs[virtual_ctlplanes_number + virtual_workers_number + total_number.value + num] }}
{% else %}
   mac: {{ ztp_virtual_nodes_baremetal_mac_prefix + ":" + "%02.d" | format(total_number.value + num + 1)| string }}
{% endif %}
{% if lab and baremetal_ips and baremetal_ips|length > virtual_ctlplanes_number + virtual_workers_number + total_number.value + num %}
   ip: {{ baremetal_ips[virtual_ctlplanes_number + virtual_workers_number + total_number.value + num] }}
   reserveip: true
{% if virtual_nodes_number >= 1 and loop.index == 1 %}
   reservedns: true
   alias:
   - api.{{ spoke_name }}.{{ domain }}
   - api-int.{{ spoke_name }}.{{ domain }}
{% endif %}
{% endif %}
 disks:
 - size: {{ ztp_virtual_nodes_disk_size }}
   interface: {{ ztp_virtual_nodes_disk_interface }}
{% endfor %}
{% set total_number.value = total_number.value + ztp_virtual_nodes_number %}
{% endif %}
{% endfor %}

{{ cluster }}-installer:
 baseplan: kcli_plan.yml
 files:
 - ztp/scripts/launch_steps.sh
 - ztp/scripts/01_assisted-service.sh
 - ztp/scripts/02_git.sh
 - ztp/scripts/03_spokes_deploy.sh
 - ztp/scripts/04_spokes_wait.sh
 - ztp/scripts/05_snoplus.sh
 - ztp/scripts/gitops
 - ztp/scripts/generate_gitops.sh
 - ztp/scripts/requirements.sample.yml
 - ztp/scripts/siteconfig.sample.yml
 - ztp/scripts/generate_siteconfig.sh
 - ztp/scripts/kustomization.yaml
 - path: /root/ztp/scripts/kubeconfig.sh
   origin: ztp/scripts/kubeconfig.sh
 - ztp/scripts/gitea.service
{% for spoke in snoplus_bmcs %}
 - path: /root/ztp/scripts/extra_bmc_{{ spoke }}.yml
   origin: ztp/scripts/extra_bmc.yml
   index: {{ loop.index0 }}
{% endfor %}
{% if ztp_policies_dir|exists %}
 - origin: {{Â ztp_policies_dir }}
   path: /root/ztp/scripts/site-policies
   render: false
{% endif %}
{% if launch_steps and workflow_installer %}
 cmds:
 - bash /root/ztp/scripts/launch_steps.sh
{% endif %}
